"""
Django settings for ArkDiscordBot project.

Generated by 'django-admin startproject' using Django 1.10.6.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '###'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# User agent for web connections
USER_AGENT = 'Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1985.67 Safari/537.36'

# Token of the bot to join discord.
DISCORD_TOKEN = '###'

# The API key of ark-server.net
ARKSERVERNET_API_KEY = '###'

# The prefix of bot commands.
BOT_COMMAND_PREFIX = '!'

# The discord channel to receive ARK chat messages.
ARK_CHAT_CHANNEL = 'chat_ark'
# Period to refresh the chat in seconds.
ARK_CHAT_REFRESH = 3

# The discord channel to receive ARK logs.
ARK_LOG_CHANNEL = 'log_ark'
# Period to refresh the logs in seconds.
ARK_LOG_REFRESH = 5

# RCon connection to Ark server.
RCON_CONNECTION = {
             'ip': '###',
             'port': 27020,
             'password': '###',
             },

# Enabled Discord commands.
BOT_COMMANDS = [
                'messages',
                #'commons',
                'rcon',
                'arkservernet',
                ]
                         
# Application definition

INSTALLED_APPS = [
    'ArkDiscordBot',
    'ark_supervisor',
]

WSGI_APPLICATION = 'ArkDiscordBot.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

LANGUAGE_CODE = 'fr'
TIME_ZONE = 'Europe/Paris'

# Logs.

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        },
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',
        },
    },
    'loggers': {
        'BOT': {
            'handlers': ['console'],
            'level': 'DEBUG',
            'propagate': False,
        },
        'RCON': {
            'handlers': ['console'],
            'level': 'DEBUG',
            'propagate': False,
        },
        '': {
            'handlers': ['console'],
            'level': os.getenv('DJANGO_LOG_LEVEL', 'INFO'),
        },
    },
}
